enum SortingDirection {
    ASC
    DESC
}

type Image @alias(property: "image") {
    _id: ID! @id
    scan_id: String
    arn: String
    ec2_cn_instanceTransient_resource_linksIn(filter: Ec2_cn_instanceInput, options: Options, sort: [Ec2_cn_instanceSort!]): [Ec2_cn_instance] @relationship(edgeType: "transient_resource_link", direction: IN)
    transient_resource_link: Transient_resource_link
}

input ImageInput {
    _id: ID @id
    scan_id: StringScalarFilters
    arn: StringScalarFilters
}

input ImageSort {
_id: SortingDirection
scan_id: SortingDirection
arn: SortingDirection
}

type Guardduty_cn_detector @alias(property: "guardduty:detector") {
    _id: ID! @id
    created_at: String
    updated_at: String
    scan_id: String
    status: String
    arn: String
    service_role: String
    finding_publishing_frequency: String
}

input Guardduty_cn_detectorInput {
    _id: ID @id
    created_at: StringScalarFilters
    updated_at: StringScalarFilters
    scan_id: StringScalarFilters
    status: StringScalarFilters
    arn: StringScalarFilters
    service_role: StringScalarFilters
    finding_publishing_frequency: StringScalarFilters
}

input Guardduty_cn_detectorSort {
    _id: SortingDirection
    created_at: SortingDirection
    updated_at: SortingDirection
    scan_id: SortingDirection
    status: SortingDirection
    arn: SortingDirection
    service_role: SortingDirection
    finding_publishing_frequency: SortingDirection
}

type Ec2_cn_vpc @alias(property: "ec2:vpc") {
    _id: ID! @id
    scan_id: String
    state: String
    arn: String
    is_default: String
    cidr_block: String
    ec2_cn_network_hy_interfaceResource_linksIn(filter: Ec2_cn_network_hy_interfaceInput, options: Options, sort: [Ec2_cn_network_hy_interfaceSort!]): [Ec2_cn_network_hy_interface] @relationship(edgeType: "resource_link", direction: IN)
    ec2_cn_subnetResource_linksIn(filter: Ec2_cn_subnetInput, options: Options, sort: [Ec2_cn_subnetSort!]): [Ec2_cn_subnet] @relationship(edgeType: "resource_link", direction: IN)
    ec2_cn_instanceResource_linksIn(filter: Ec2_cn_instanceInput, options: Options, sort: [Ec2_cn_instanceSort!]): [Ec2_cn_instance] @relationship(edgeType: "resource_link", direction: IN)
    resource_link: Resource_link
    transient_resource_link: Transient_resource_link
}

input Ec2_cn_vpcInput {
    _id: ID @id
    scan_id: StringScalarFilters
    state: StringScalarFilters
    arn: StringScalarFilters
    is_default: StringScalarFilters
    cidr_block: StringScalarFilters
}

input Ec2_cn_vpcSort {
    _id: SortingDirection
    scan_id: SortingDirection
    state: SortingDirection
    arn: SortingDirection
    is_default: SortingDirection
    cidr_block: SortingDirection
}

type Iam_cn_role @alias(property: "iam:role") {
    _id: ID! @id
    name: String
    principal_dot_aws: String @alias(property: "principal.aws")
    statement_dot_effect: String @alias(property: "statement.effect")
    statement_dot_action: String @alias(property: "statement.action")
    max_session_duration: String
    arn: String
    nassume_role_policy_document_text: String
    scan_id: String
    assume_role_policy_document_dot_version: String @alias(property: "assume_role_policy_document.version")
    iam_cn_policyResource_linksOut(filter: Iam_cn_policyInput, options: Options, sort: [Iam_cn_policySort!]): [Iam_cn_policy] @relationship(edgeType: "resource_link", direction: OUT)
    resource_link: Resource_link
}

input Iam_cn_roleInput {
    _id: ID @id
    name: StringScalarFilters
    principal_dot_aws: StringScalarFilters @alias(property: "principal.aws")
    statement_dot_effect: StringScalarFilters @alias(property: "statement.effect")
    statement_dot_action: StringScalarFilters @alias(property: "statement.action")
    max_session_duration: StringScalarFilters
    arn: StringScalarFilters
    nassume_role_policy_document_text: StringScalarFilters
    scan_id: StringScalarFilters
    assume_role_policy_document_dot_version: StringScalarFilters @alias(property: "assume_role_policy_document.version")
}

input Iam_cn_roleSort {
    _id: SortingDirection
    name: SortingDirection
    principal_dot_aws: SortingDirection @alias(property: "principal.aws")
    statement_dot_effect: SortingDirection @alias(property: "statement.effect")
    statement_dot_action: SortingDirection @alias(property: "statement.action")
    max_session_duration: SortingDirection
    arn: SortingDirection
    nassume_role_policy_document_text: SortingDirection
    scan_id: SortingDirection
    assume_role_policy_document_dot_version: SortingDirection @alias(property: "assume_role_policy_document.version")
}

type Ec2_cn_network_hy_interface @alias(property: "ec2:network-interface") {
    _id: ID! @id
    public_ip: String
    public_dns_name: String
    arn: String
    private_ip_address: String
    mac_address: String
    scan_id: String
    private_dns_name: String
    status: String
    interface_type: String
    description: String
    ec2_cn_vpcResource_linkOut: Ec2_cn_vpc @relationship(edgeType: "resource_link", direction: OUT)
    resource_link: Resource_link
}

input Ec2_cn_network_hy_interfaceInput {
    _id: ID @id
    public_ip: StringScalarFilters
    public_dns_name: StringScalarFilters
    arn: StringScalarFilters
    private_ip_address: StringScalarFilters
    mac_address: StringScalarFilters
    scan_id: StringScalarFilters
    private_dns_name: StringScalarFilters
    status: StringScalarFilters
    interface_type: StringScalarFilters
    description: StringScalarFilters
}

input Ec2_cn_network_hy_interfaceSort {
    _id: SortingDirection
    public_ip: SortingDirection
    public_dns_name: SortingDirection
    arn: SortingDirection
    private_ip_address: SortingDirection
    mac_address: SortingDirection
    scan_id: SortingDirection
    private_dns_name: SortingDirection
    status: SortingDirection
    interface_type: SortingDirection
    description: SortingDirection
}

type Rds_cn_db @alias(property: "rds:db") {
    _id: ID! @id
    storage_type: String
    performance_insights_enabled: String
    dbi_resource_id: String
    scan_id: String
    db_instance_identifier: String
    backup_retention_period: String
    publicly_accessible: String
    multi_az: String
    availability_zone: String
    arn: String
    storage_encrypted: String
    iam_database_authentication_enabled: String
    db_instance_class: String
    endpoint_hosted_zone: String
    deletion_protection: String
    endpoint_address: String
    db_instance_status: String
    endpoint_port: String
    instance_create_time: String
    engine: String
    transient_resource_link: Transient_resource_link
}

input Rds_cn_dbInput {
    _id: ID @id
    storage_type: StringScalarFilters
    performance_insights_enabled: StringScalarFilters
    dbi_resource_id: StringScalarFilters
    scan_id: StringScalarFilters
    db_instance_identifier: StringScalarFilters
    backup_retention_period: StringScalarFilters
    publicly_accessible: StringScalarFilters
    multi_az: StringScalarFilters
    availability_zone: StringScalarFilters
    arn: StringScalarFilters
    storage_encrypted: StringScalarFilters
    iam_database_authentication_enabled: StringScalarFilters
    db_instance_class: StringScalarFilters
    endpoint_hosted_zone: StringScalarFilters
    deletion_protection: StringScalarFilters
    endpoint_address: StringScalarFilters
    db_instance_status: StringScalarFilters
    endpoint_port: StringScalarFilters
    instance_create_time: StringScalarFilters
    engine: StringScalarFilters
}

input Rds_cn_dbSort {
    _id: SortingDirection
    storage_type: SortingDirection
    performance_insights_enabled: SortingDirection
    dbi_resource_id: SortingDirection
    scan_id: SortingDirection
    db_instance_identifier: SortingDirection
    backup_retention_period: SortingDirection
    publicly_accessible: SortingDirection
    multi_az: SortingDirection
    availability_zone: SortingDirection
    arn: SortingDirection
    storage_encrypted: SortingDirection
    iam_database_authentication_enabled: SortingDirection
    db_instance_class: SortingDirection
    endpoint_hosted_zone: SortingDirection
    deletion_protection: SortingDirection
    endpoint_address: SortingDirection
    db_instance_status: SortingDirection
    endpoint_port: SortingDirection
    instance_create_time: SortingDirection
    engine: SortingDirection
}

type Ec2_cn_instance @alias(property: "ec2:instance") {
    _id: ID! @id
    scan_id: String
    public_ip_address: String
    instance_type: String
    state: String
    arn: String
    private_ip_address: String
    launch_time: String
    ec2_cn_security_hy_groupResource_linkOut: Ec2_cn_security_hy_group @relationship(edgeType: "resource_link", direction: OUT)
    ec2_cn_subnetResource_linkOut: Ec2_cn_subnet @relationship(edgeType: "resource_link", direction: OUT)
    ec2_cn_vpcResource_linkOut: Ec2_cn_vpc @relationship(edgeType: "resource_link", direction: OUT)
    imageTransient_resource_linkOut: Image @relationship(edgeType: "transient_resource_link", direction: OUT)
    resource_link: Resource_link
    tagged: Tagged
    transient_resource_link: Transient_resource_link
}

input Ec2_cn_instanceInput {
    _id: ID @id
    scan_id: StringScalarFilters
    public_ip_address: StringScalarFilters
    instance_type: StringScalarFilters
    state: StringScalarFilters
    arn: StringScalarFilters
    private_ip_address: StringScalarFilters
    launch_time: StringScalarFilters
}

input Ec2_cn_instanceSort {
    _id: SortingDirection
    scan_id: SortingDirection
    public_ip_address: SortingDirection
    instance_type: SortingDirection
    state: SortingDirection
    arn: SortingDirection
    private_ip_address: SortingDirection
    launch_time: SortingDirection
}

type Iam_cn_user @alias(property: "iam:user") {
    _id: ID! @id
    password_last_used: String
    name: String
    login_profile_dot_password_reset_required: String @alias(property: "login_profile.password_reset_required")
    arn: String
    access_key_dot_access_key_id: String @alias(property: "access_key.access_key_id")
    login_profile_dot_create_date: String @alias(property: "login_profile.create_date")
    scan_id: String
    create_date: String
    access_key_dot_last_used_date: String @alias(property: "access_key.last_used_date")
    access_key_dot_status: String @alias(property: "access_key.status")
    user_id: String
    access_key_dot_create_date: String @alias(property: "access_key.create_date")
}

input Iam_cn_userInput {
    _id: ID @id
    password_last_used: StringScalarFilters
    name: StringScalarFilters
    login_profile_dot_password_reset_required: StringScalarFilters @alias(property: "login_profile.password_reset_required")
    arn: StringScalarFilters
    access_key_dot_access_key_id: StringScalarFilters @alias(property: "access_key.access_key_id")
    login_profile_dot_create_date: StringScalarFilters @alias(property: "login_profile.create_date")
    scan_id: StringScalarFilters
    create_date: StringScalarFilters
    access_key_dot_last_used_date: StringScalarFilters @alias(property: "access_key.last_used_date")
    access_key_dot_status: StringScalarFilters @alias(property: "access_key.status")
    user_id: StringScalarFilters
    access_key_dot_create_date: StringScalarFilters @alias(property: "access_key.create_date")
}

input Iam_cn_userSort {
    _id: SortingDirection
    password_last_used: SortingDirection
    name: SortingDirection
    login_profile_dot_password_reset_required: SortingDirection @alias(property: "login_profile.password_reset_required")
    arn: SortingDirection
    access_key_dot_access_key_id: SortingDirection @alias(property: "access_key.access_key_id")
    login_profile_dot_create_date: SortingDirection @alias(property: "login_profile.create_date")
    scan_id: SortingDirection
    create_date: SortingDirection
    access_key_dot_last_used_date: SortingDirection @alias(property: "access_key.last_used_date")
    access_key_dot_status: SortingDirection @alias(property: "access_key.status")
    user_id: SortingDirection
    access_key_dot_create_date: SortingDirection @alias(property: "access_key.create_date")
}

type Ec2_cn_security_hy_group @alias(property: "ec2:security-group") {
    _id: ID! @id
    egress_rule_dot_ip_protocol: String @alias(property: "egress_rule.ip_protocol")
    name: String
    ip_range_dot_first_ip: String @alias(property: "ip_range.first_ip")
    arn: String
    egress_rule_dot_to_port: String @alias(property: "egress_rule.to_port")
    scan_id: String
    ip_range_dot_last_ip: String @alias(property: "ip_range.last_ip")
    egress_rule_dot_from_port: String @alias(property: "egress_rule.from_port")
    ip_range_dot_cidr_ip: String @alias(property: "ip_range.cidr_ip")
    ingress_rule_dot_from_port: String @alias(property: "ingress_rule.from_port")
    ingress_rule_dot_ip_protocol: String @alias(property: "ingress_rule.ip_protocol")
    ingress_rule_dot_to_port: String @alias(property: "ingress_rule.to_port")
    user_id_group_pairs_dot_account_id: String @alias(property: "user_id_group_pairs.account_id")
    ec2_cn_instanceResource_linksIn(filter: Ec2_cn_instanceInput, options: Options, sort: [Ec2_cn_instanceSort!]): [Ec2_cn_instance] @relationship(edgeType: "resource_link", direction: IN)
    ec2_cn_security_hy_groupResource_linkOut: Ec2_cn_security_hy_group @relationship(edgeType: "resource_link", direction: OUT)
    ec2_cn_security_hy_groupResource_linkIn: Ec2_cn_security_hy_group @relationship(edgeType: "resource_link", direction: IN)
    tagTaggedsOut(filter: TagInput, options: Options, sort: [TagSort!]): [Tag] @relationship(edgeType: "tagged", direction: OUT)
    resource_link: Resource_link
    tagged: Tagged
    transient_resource_link: Transient_resource_link
}

input Ec2_cn_security_hy_groupInput {
    _id: ID @id
    egress_rule_dot_ip_protocol: StringScalarFilters @alias(property: "egress_rule.ip_protocol")
    name: StringScalarFilters
    ip_range_dot_first_ip: StringScalarFilters @alias(property: "ip_range.first_ip")
    arn: StringScalarFilters
    egress_rule_dot_to_port: StringScalarFilters @alias(property: "egress_rule.to_port")
    scan_id: StringScalarFilters
    ip_range_dot_last_ip: StringScalarFilters @alias(property: "ip_range.last_ip")
    egress_rule_dot_from_port: StringScalarFilters @alias(property: "egress_rule.from_port")
    ip_range_dot_cidr_ip: StringScalarFilters @alias(property: "ip_range.cidr_ip")
    ingress_rule_dot_from_port: StringScalarFilters @alias(property: "ingress_rule.from_port")
    ingress_rule_dot_ip_protocol: StringScalarFilters @alias(property: "ingress_rule.ip_protocol")
    ingress_rule_dot_to_port: StringScalarFilters @alias(property: "ingress_rule.to_port")
    user_id_group_pairs_dot_account_id: StringScalarFilters @alias(property: "user_id_group_pairs.account_id")
}

input Ec2_cn_security_hy_groupSort {
    _id: SortingDirection
    egress_rule_dot_ip_protocol: SortingDirection @alias(property: "egress_rule.ip_protocol")
    name: SortingDirection
    ip_range_dot_first_ip: SortingDirection @alias(property: "ip_range.first_ip")
    arn: SortingDirection
    egress_rule_dot_to_port: SortingDirection @alias(property: "egress_rule.to_port")
    scan_id: SortingDirection
    ip_range_dot_last_ip: SortingDirection @alias(property: "ip_range.last_ip")
    egress_rule_dot_from_port: SortingDirection @alias(property: "egress_rule.from_port")
    ip_range_dot_cidr_ip: SortingDirection @alias(property: "ip_range.cidr_ip")
    ingress_rule_dot_from_port: SortingDirection @alias(property: "ingress_rule.from_port")
    ingress_rule_dot_ip_protocol: SortingDirection @alias(property: "ingress_rule.ip_protocol")
    ingress_rule_dot_to_port: SortingDirection @alias(property: "ingress_rule.to_port")
    user_id_group_pairs_dot_account_id: SortingDirection @alias(property: "user_id_group_pairs.account_id")
}

type Ec2_cn_internet_hy_gateway @alias(property: "ec2:internet-gateway") {
    _id: ID! @id
    arn: String
    scan_id: String
    owner_id: String
    attachment_dot_state: String @alias(property: "attachment.state")
    resource_link: Resource_link
}

input Ec2_cn_internet_hy_gatewayInput {
    _id: ID @id
    arn: StringScalarFilters
    scan_id: StringScalarFilters
    owner_id: StringScalarFilters
    attachment_dot_state: StringScalarFilters @alias(property: "attachment.state")
}

input Ec2_cn_internet_hy_gatewaySort {
    _id: SortingDirection
    arn: SortingDirection
    scan_id: SortingDirection
    owner_id: SortingDirection
    attachment_dot_state: SortingDirection @alias(property: "attachment.state")
}

type Events_cn_rule @alias(property: "events:rule") {
    _id: ID! @id
    arn: String
    name: String
    scan_id: String
    target_dot_arn: String @alias(property: "target.arn")
    target_dot_name: String @alias(property: "target.name")
    event_pattern: String
    state: String
}

input Events_cn_ruleInput {
    _id: ID @id
    arn: StringScalarFilters
    name: StringScalarFilters
    scan_id: StringScalarFilters
    target_dot_arn: StringScalarFilters @alias(property: "target.arn")
    target_dot_name: StringScalarFilters @alias(property: "target.name")
    event_pattern: StringScalarFilters
    state: StringScalarFilters
}

input Events_cn_ruleSort {
    _id: SortingDirection
    arn: SortingDirection
    name: SortingDirection
    scan_id: SortingDirection
    target_dot_arn: SortingDirection @alias(property: "target.arn")
    target_dot_name: SortingDirection @alias(property: "target.name")
    event_pattern: SortingDirection
    state: SortingDirection
}

type Ec2_cn_subnet @alias(property: "ec2:subnet") {
    _id: ID! @id
    scan_id: String
    first_ip: String
    state: String
    arn: String
    last_ip: String
    cidr_block: String
    ec2_cn_instanceResource_linksIn(filter: Ec2_cn_instanceInput, options: Options, sort: [Ec2_cn_instanceSort!]): [Ec2_cn_instance] @relationship(edgeType: "resource_link", direction: IN)
    ec2_cn_vpcResource_linkOut: Ec2_cn_vpc @relationship(edgeType: "resource_link", direction: OUT)
    resource_link: Resource_link
}

input Ec2_cn_subnetInput {
    _id: ID @id
    scan_id: StringScalarFilters
    first_ip: StringScalarFilters
    state: StringScalarFilters
    arn: StringScalarFilters
    last_ip: StringScalarFilters
    cidr_block: StringScalarFilters
}

input Ec2_cn_subnetSort {
    _id: SortingDirection
    scan_id: SortingDirection
    first_ip: SortingDirection
    state: SortingDirection
    arn: SortingDirection
    last_ip: SortingDirection
    cidr_block: SortingDirection
}

type Iam_cn_instance_hy_profile @alias(property: "iam:instance-profile") {
    _id: ID! @id
    arn: String
    name: String
    scan_id: String
    resource_link: Resource_link
    transient_resource_link: Transient_resource_link
}

input Iam_cn_instance_hy_profileInput {
    _id: ID @id
    arn: StringScalarFilters
    name: StringScalarFilters
    scan_id: StringScalarFilters
}

input Iam_cn_instance_hy_profileSort {
    _id: SortingDirection
    arn: SortingDirection
    name: SortingDirection
    scan_id: SortingDirection
}

type Iam_cn_policy @alias(property: "iam:policy") {
    _id: ID! @id
    default_version_policy_document_text: String
    default_version_id: String
    name: String
    scan_id: String
    arn: String
    policy_id: String
    iam_cn_roleResource_linksIn(filter: Iam_cn_roleInput, options: Options, sort: [Iam_cn_roleSort!]): [Iam_cn_role] @relationship(edgeType: "resource_link", direction: IN)
    resource_link: Resource_link
}

input Iam_cn_policyInput {
    _id: ID @id
    default_version_policy_document_text: StringScalarFilters
    default_version_id: StringScalarFilters
    name: StringScalarFilters
    scan_id: StringScalarFilters
    arn: StringScalarFilters
    policy_id: StringScalarFilters
}

input Iam_cn_policySort {
    _id: SortingDirection
    default_version_policy_document_text: SortingDirection
    default_version_id: SortingDirection
    name: SortingDirection
    scan_id: SortingDirection
    arn: SortingDirection
    policy_id: SortingDirection
}

type S3_cn_bucket @alias(property: "s3:bucket") {
    _id: ID! @id
    name: String
    scan_id: String
    server_side_default_encryption_rule_dot_algorithm: String @alias(property: "server_side_default_encryption_rule.algorithm")
    creation_date: String
    arn: String
}

input S3_cn_bucketInput {
    _id: ID @id
    name: StringScalarFilters
    scan_id: StringScalarFilters
    server_side_default_encryption_rule_dot_algorithm: StringScalarFilters @alias(property: "server_side_default_encryption_rule.algorithm")
    creation_date: StringScalarFilters
    arn: StringScalarFilters
}

input S3_cn_bucketSort {
    _id: SortingDirection
    name: SortingDirection
    scan_id: SortingDirection
    server_side_default_encryption_rule_dot_algorithm: SortingDirection @alias(property: "server_side_default_encryption_rule.algorithm")
    creation_date: SortingDirection
    arn: SortingDirection
}

type Tag @alias(property: "tag") {
    _id: ID! @id
    scan_id: String
    Name: String
    ec2_cn_security_hy_groupTaggedIn: Ec2_cn_security_hy_group @relationship(edgeType: "tagged", direction: IN)
    tagged: Tagged
}

input TagInput {
    _id: ID @id
    scan_id: StringScalarFilters
    Name: StringScalarFilters
}

input TagSort {
    _id: SortingDirection
    scan_id: SortingDirection
    Name: SortingDirection
}

type Kms_cn_key @alias(property: "kms:key") {
    _id: ID! @id
    arn: String
    scan_id: String
    key_id: String
    transient_resource_link: Transient_resource_link
}

input Kms_cn_keyInput {
    _id: ID @id
    arn: StringScalarFilters
    scan_id: StringScalarFilters
    key_id: StringScalarFilters
}

input Kms_cn_keySort {
    _id: SortingDirection
    arn: SortingDirection
    scan_id: SortingDirection
    key_id: SortingDirection
}

type Ec2_cn_volume @alias(property: "ec2:volume") {
    _id: ID! @id
    encrypted: String
    availability_zone: String
    state: String
    arn: String
    attachment_dot_attach_time: String @alias(property: "attachment.attach_time")
    volume_type: String
    scan_id: String
    attachment_dot_state: String @alias(property: "attachment.state")
    size: String
    create_time: String
    attachment_dot_delete_on_termination: String @alias(property: "attachment.delete_on_termination")
    resource_link: Resource_link
}

input Ec2_cn_volumeInput {
    _id: ID @id
    encrypted: StringScalarFilters
    availability_zone: StringScalarFilters
    state: StringScalarFilters
    arn: StringScalarFilters
    attachment_dot_attach_time: StringScalarFilters @alias(property: "attachment.attach_time")
    volume_type: StringScalarFilters
    scan_id: StringScalarFilters
    attachment_dot_state: StringScalarFilters @alias(property: "attachment.state")
    size: StringScalarFilters
    create_time: StringScalarFilters
    attachment_dot_delete_on_termination: StringScalarFilters @alias(property: "attachment.delete_on_termination")
}

input Ec2_cn_volumeSort {
    _id: SortingDirection
    encrypted: SortingDirection
    availability_zone: SortingDirection
    state: SortingDirection
    arn: SortingDirection
    attachment_dot_attach_time: SortingDirection @alias(property: "attachment.attach_time")
    volume_type: SortingDirection
    scan_id: SortingDirection
    attachment_dot_state: SortingDirection @alias(property: "attachment.state")
    size: SortingDirection
    create_time: SortingDirection
    attachment_dot_delete_on_termination: SortingDirection @alias(property: "attachment.delete_on_termination")
}

type Ec2_cn_route_hy_table @alias(property: "ec2:route-table") {
    _id: ID! @id
    route_dot_destination_cidr_block: String @alias(property: "route.destination_cidr_block")
    arn: String
    route_table_id: String
    association_dot_route_table_id: String @alias(property: "association.route_table_id")
    route_dot_origin: String @alias(property: "route.origin")
    route_dot_gateway_id: String @alias(property: "route.gateway_id")
    scan_id: String
    owner_id: String
    association_dot_main: String @alias(property: "association.main")
    route_dot_state: String @alias(property: "route.state")
    association_dot_route_table_association_id: String @alias(property: "association.route_table_association_id")
    resource_link: Resource_link
}

input Ec2_cn_route_hy_tableInput {
    _id: ID @id
    route_dot_destination_cidr_block: StringScalarFilters @alias(property: "route.destination_cidr_block")
    arn: StringScalarFilters
    route_table_id: StringScalarFilters
    association_dot_route_table_id: StringScalarFilters @alias(property: "association.route_table_id")
    route_dot_origin: StringScalarFilters @alias(property: "route.origin")
    route_dot_gateway_id: StringScalarFilters @alias(property: "route.gateway_id")
    scan_id: StringScalarFilters
    owner_id: StringScalarFilters
    association_dot_main: StringScalarFilters @alias(property: "association.main")
    route_dot_state: StringScalarFilters @alias(property: "route.state")
    association_dot_route_table_association_id: StringScalarFilters @alias(property: "association.route_table_association_id")
}

input Ec2_cn_route_hy_tableSort {
    _id: SortingDirection
    route_dot_destination_cidr_block: SortingDirection @alias(property: "route.destination_cidr_block")
    arn: SortingDirection
    route_table_id: SortingDirection
    association_dot_route_table_id: SortingDirection @alias(property: "association.route_table_id")
    route_dot_origin: SortingDirection @alias(property: "route.origin")
    route_dot_gateway_id: SortingDirection @alias(property: "route.gateway_id")
    scan_id: SortingDirection
    owner_id: SortingDirection
    association_dot_main: SortingDirection @alias(property: "association.main")
    route_dot_state: SortingDirection @alias(property: "route.state")
    association_dot_route_table_association_id: SortingDirection @alias(property: "association.route_table_association_id")
}

type Resource_link @alias(property: "resource_link") {
    _id: ID! @id
}

type Tagged @alias(property: "tagged") {
    _id: ID! @id
}

type Transient_resource_link @alias(property: "transient_resource_link") {
    _id: ID! @id
}

input Options {
    limit: Int
    offset: Int
}

input StringScalarFilters {
    eq: String
    contains: String
    endsWith: String
    startsWith: String
}

type Query {
    getImage(filter: ImageInput): Image
    getImages(filter: ImageInput, options: Options, sort: [ImageSort!]): [Image]
    getGuardduty_cn_detector(filter: Guardduty_cn_detectorInput): Guardduty_cn_detector
    getGuardduty_cn_detectors(filter: Guardduty_cn_detectorInput, options: Options, sort: [Guardduty_cn_detectorSort!]): [Guardduty_cn_detector]
    getEc2_cn_vpc(filter: Ec2_cn_vpcInput): Ec2_cn_vpc
    getEc2_cn_vpcs(filter: Ec2_cn_vpcInput, options: Options, sort: [Ec2_cn_vpcSort!]): [Ec2_cn_vpc]
    getIam_cn_role(filter: Iam_cn_roleInput): Iam_cn_role
    getIam_cn_roles(filter: Iam_cn_roleInput, options: Options, sort: [Iam_cn_roleSort!]): [Iam_cn_role]
    getEc2_cn_network_hy_interface(filter: Ec2_cn_network_hy_interfaceInput): Ec2_cn_network_hy_interface
    getEc2_cn_network_hy_interfaces(filter: Ec2_cn_network_hy_interfaceInput, options: Options, sort: [Ec2_cn_network_hy_interfaceSort!]): [Ec2_cn_network_hy_interface]
    getRds_cn_db(filter: Rds_cn_dbInput): Rds_cn_db
    getRds_cn_dbs(filter: Rds_cn_dbInput, options: Options, sort: [Rds_cn_dbSort!]): [Rds_cn_db]
    getEc2_cn_instance(filter: Ec2_cn_instanceInput): Ec2_cn_instance
    getEc2_cn_instances(filter: Ec2_cn_instanceInput, options: Options, sort: [Ec2_cn_instanceSort!]): [Ec2_cn_instance]
    getIam_cn_user(filter: Iam_cn_userInput): Iam_cn_user
    getIam_cn_users(filter: Iam_cn_userInput, options: Options, sort: [Iam_cn_userSort!]): [Iam_cn_user]
    getEc2_cn_security_hy_group(filter: Ec2_cn_security_hy_groupInput): Ec2_cn_security_hy_group
    getEc2_cn_security_hy_groups(filter: Ec2_cn_security_hy_groupInput, options: Options, sort: [Ec2_cn_security_hy_groupSort!]): [Ec2_cn_security_hy_group]
    getEc2_cn_internet_hy_gateway(filter: Ec2_cn_internet_hy_gatewayInput): Ec2_cn_internet_hy_gateway
    getEc2_cn_internet_hy_gateways(filter: Ec2_cn_internet_hy_gatewayInput, options: Options, sort: [Ec2_cn_internet_hy_gatewaySort!]): [Ec2_cn_internet_hy_gateway]
    getEvents_cn_rule(filter: Events_cn_ruleInput): Events_cn_rule
    getEvents_cn_rules(filter: Events_cn_ruleInput, options: Options, sort: [Events_cn_ruleSort!]): [Events_cn_rule]
    getEc2_cn_subnet(filter: Ec2_cn_subnetInput): Ec2_cn_subnet
    getEc2_cn_subnets(filter: Ec2_cn_subnetInput, options: Options, sort: [Ec2_cn_subnetSort!]): [Ec2_cn_subnet]
    getIam_cn_instance_hy_profile(filter: Iam_cn_instance_hy_profileInput): Iam_cn_instance_hy_profile
    getIam_cn_instance_hy_profiles(filter: Iam_cn_instance_hy_profileInput, options: Options, sort: [Iam_cn_instance_hy_profileSort!]): [Iam_cn_instance_hy_profile]
    getIam_cn_policy(filter: Iam_cn_policyInput): Iam_cn_policy
    getIam_cn_policys(filter: Iam_cn_policyInput, options: Options, sort: [Iam_cn_policySort!]): [Iam_cn_policy]
    getS3_cn_bucket(filter: S3_cn_bucketInput): S3_cn_bucket
    getS3_cn_buckets(filter: S3_cn_bucketInput, options: Options, sort: [S3_cn_bucketSort!]): [S3_cn_bucket]
    getTag(filter: TagInput): Tag
    getTags(filter: TagInput, options: Options, sort: [TagSort!]): [Tag]
    getKms_cn_key(filter: Kms_cn_keyInput): Kms_cn_key
    getKms_cn_keys(filter: Kms_cn_keyInput, options: Options, sort: [Kms_cn_keySort!]): [Kms_cn_key]
    getEc2_cn_volume(filter: Ec2_cn_volumeInput): Ec2_cn_volume
    getEc2_cn_volumes(filter: Ec2_cn_volumeInput, options: Options, sort: [Ec2_cn_volumeSort!]): [Ec2_cn_volume]
    getEc2_cn_route_hy_table(filter: Ec2_cn_route_hy_tableInput): Ec2_cn_route_hy_table
    getEc2_cn_route_hy_tables(filter: Ec2_cn_route_hy_tableInput, options: Options, sort: [Ec2_cn_route_hy_tableSort!]): [Ec2_cn_route_hy_table]
}

schema {
    query: Query
}
